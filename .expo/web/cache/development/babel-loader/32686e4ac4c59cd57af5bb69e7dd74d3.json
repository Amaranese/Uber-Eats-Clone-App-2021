{"ast":null,"code":"\"use strict\";\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = (0, tslib_1.__importStar)(require(\"react\"));\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nvar BouncyCheckbox_style_1 = (0, tslib_1.__importStar)(require(\"./BouncyCheckbox.style\"));\n\nvar defaultCheckImage = require(\"./check.png\");\n\nvar BouncyCheckbox = function (_React$Component) {\n  _inherits(BouncyCheckbox, _React$Component);\n\n  var _super = _createSuper(BouncyCheckbox);\n\n  function BouncyCheckbox(props) {\n    var _this;\n\n    _classCallCheck(this, BouncyCheckbox);\n\n    _this = _super.call(this, props);\n\n    _this.onPress = function () {\n      var _this$props = _this.props,\n          _this$props$disableBu = _this$props.disableBuiltInState,\n          disableBuiltInState = _this$props$disableBu === void 0 ? false : _this$props$disableBu,\n          _this$props$useNative = _this$props.useNativeDriver,\n          useNativeDriver = _this$props$useNative === void 0 ? true : _this$props$useNative,\n          _this$props$bounceEff = _this$props.bounceEffect,\n          bounceEffect = _this$props$bounceEff === void 0 ? 1 : _this$props$bounceEff,\n          _this$props$bounceFri = _this$props.bounceFriction,\n          bounceFriction = _this$props$bounceFri === void 0 ? 3 : _this$props$bounceFri;\n      var _this$state = _this.state,\n          checked = _this$state.checked,\n          springValue = _this$state.springValue;\n\n      if (!disableBuiltInState) {\n        _this.setState({\n          checked: !checked\n        }, function () {\n          springValue.setValue(0.7);\n          react_native_1.Animated.spring(springValue, {\n            toValue: bounceEffect,\n            friction: bounceFriction,\n            useNativeDriver: useNativeDriver\n          }).start();\n          _this.props.onPress && _this.props.onPress(_this.state.checked);\n        });\n      } else {\n        springValue.setValue(0.7);\n        react_native_1.Animated.spring(springValue, {\n          toValue: bounceEffect,\n          friction: bounceFriction,\n          useNativeDriver: useNativeDriver\n        }).start();\n        _this.props.onPress && _this.props.onPress(_this.state.checked);\n      }\n    };\n\n    _this.renderCheckIcon = function () {\n      var _this$state2 = _this.state,\n          checked = _this$state2.checked,\n          springValue = _this$state2.springValue;\n      var _this$props2 = _this.props,\n          _this$props2$size = _this$props2.size,\n          size = _this$props2$size === void 0 ? 25 : _this$props2$size,\n          iconStyle = _this$props2.iconStyle,\n          iconComponent = _this$props2.iconComponent,\n          iconImageStyle = _this$props2.iconImageStyle,\n          _this$props2$fillColo = _this$props2.fillColor,\n          fillColor = _this$props2$fillColo === void 0 ? \"#ffc484\" : _this$props2$fillColo,\n          _this$props2$ImageCom = _this$props2.ImageComponent,\n          ImageComponent = _this$props2$ImageCom === void 0 ? react_native_1.Image : _this$props2$ImageCom,\n          _this$props2$unfillCo = _this$props2.unfillColor,\n          unfillColor = _this$props2$unfillCo === void 0 ? \"transparent\" : _this$props2$unfillCo,\n          disableBuiltInState = _this$props2.disableBuiltInState,\n          isChecked = _this$props2.isChecked,\n          _this$props2$checkIco = _this$props2.checkIconImageSource,\n          checkIconImageSource = _this$props2$checkIco === void 0 ? defaultCheckImage : _this$props2$checkIco;\n      var checkStatus = disableBuiltInState ? isChecked : checked;\n      return React.createElement(react_native_1.Animated.View, {\n        style: [{\n          transform: [{\n            scale: springValue\n          }]\n        }, (0, BouncyCheckbox_style_1._iconContainer)(size, checkStatus, fillColor, unfillColor), iconStyle]\n      }, iconComponent || checkStatus && React.createElement(ImageComponent, {\n        source: checkIconImageSource,\n        style: [BouncyCheckbox_style_1.default.iconImageStyle, iconImageStyle]\n      }));\n    };\n\n    _this.renderCheckboxText = function () {\n      var _this$props3 = _this.props,\n          text = _this$props3.text,\n          isChecked = _this$props3.isChecked,\n          textStyle = _this$props3.textStyle,\n          textContainerStyle = _this$props3.textContainerStyle,\n          disableBuiltInState = _this$props3.disableBuiltInState,\n          _this$props3$disableT = _this$props3.disableText,\n          disableText = _this$props3$disableT === void 0 ? false : _this$props3$disableT;\n      var checked = _this.state.checked;\n      return !disableText && React.createElement(react_native_1.View, {\n        style: [BouncyCheckbox_style_1.default.textContainer, textContainerStyle]\n      }, React.createElement(react_native_1.Text, {\n        style: [(0, BouncyCheckbox_style_1._textStyle)(disableBuiltInState ? isChecked : checked), textStyle]\n      }, text));\n    };\n\n    _this.state = {\n      checked: false,\n      springValue: new react_native_1.Animated.Value(1)\n    };\n    return _this;\n  }\n\n  _createClass(BouncyCheckbox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        checked: this.props.isChecked || false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          style = _this$props4.style,\n          _this$props4$Touchabl = _this$props4.TouchableComponent,\n          TouchableComponent = _this$props4$Touchabl === void 0 ? react_native_1.TouchableOpacity : _this$props4$Touchabl;\n      return React.createElement(TouchableComponent, _extends({}, this.props, {\n        style: [BouncyCheckbox_style_1.default.container, style],\n        onPress: this.onPress.bind(this, react_native_1.Easing.bounce)\n      }), this.renderCheckIcon(), this.renderCheckboxText());\n    }\n  }]);\n\n  return BouncyCheckbox;\n}(React.Component);\n\nexports.default = BouncyCheckbox;","map":{"version":3,"sources":["../../lib/BouncyCheckbox.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst React = (0, tslib_1.__importStar)(require(\"react\"));\nconst react_native_1 = require(\"react-native\");\nconst BouncyCheckbox_style_1 = (0, tslib_1.__importStar)(require(\"./BouncyCheckbox.style\"));\nconst defaultCheckImage = require(\"./check.png\");\nclass BouncyCheckbox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            checked: false,\n            springValue: new react_native_1.Animated.Value(1),\n        };\n    }\n    componentDidMount() {\n        this.setState({ checked: this.props.isChecked || false });\n    }\n    onPress = () => {\n        const { disableBuiltInState = false, useNativeDriver = true, bounceEffect = 1, bounceFriction = 3, } = this.props;\n        const { checked, springValue } = this.state;\n        if (!disableBuiltInState) {\n            this.setState({ checked: !checked }, () => {\n                springValue.setValue(0.7);\n                react_native_1.Animated.spring(springValue, {\n                    toValue: bounceEffect,\n                    friction: bounceFriction,\n                    useNativeDriver,\n                }).start();\n                this.props.onPress && this.props.onPress(this.state.checked);\n            });\n        }\n        else {\n            springValue.setValue(0.7);\n            react_native_1.Animated.spring(springValue, {\n                toValue: bounceEffect,\n                friction: bounceFriction,\n                useNativeDriver,\n            }).start();\n            this.props.onPress && this.props.onPress(this.state.checked);\n        }\n    };\n    renderCheckIcon = () => {\n        const { checked, springValue } = this.state;\n        const { size = 25, iconStyle, iconComponent, iconImageStyle, fillColor = \"#ffc484\", ImageComponent = react_native_1.Image, unfillColor = \"transparent\", disableBuiltInState, isChecked, checkIconImageSource = defaultCheckImage, } = this.props;\n        const checkStatus = disableBuiltInState ? isChecked : checked;\n        return (<react_native_1.Animated.View style={[\n                { transform: [{ scale: springValue }] },\n                (0, BouncyCheckbox_style_1._iconContainer)(size, checkStatus, fillColor, unfillColor),\n                iconStyle,\n            ]}>\n        {iconComponent ||\n                (checkStatus && (<ImageComponent source={checkIconImageSource} style={[BouncyCheckbox_style_1.default.iconImageStyle, iconImageStyle]}/>))}\n      </react_native_1.Animated.View>);\n    };\n    renderCheckboxText = () => {\n        const { text, isChecked, textStyle, textContainerStyle, disableBuiltInState, disableText = false, } = this.props;\n        const { checked } = this.state;\n        return (!disableText && (<react_native_1.View style={[BouncyCheckbox_style_1.default.textContainer, textContainerStyle]}>\n          <react_native_1.Text style={[\n                (0, BouncyCheckbox_style_1._textStyle)(disableBuiltInState ? isChecked : checked),\n                textStyle,\n            ]}>\n            {text}\n          </react_native_1.Text>\n        </react_native_1.View>));\n    };\n    render() {\n        const { style, TouchableComponent = react_native_1.TouchableOpacity } = this.props;\n        return (<TouchableComponent {...this.props} style={[BouncyCheckbox_style_1.default.container, style]} onPress={this.onPress.bind(this, react_native_1.Easing.bounce)}>\n        {this.renderCheckIcon()}\n        {this.renderCheckboxText()}\n      </TouchableComponent>);\n    }\n}\nexports.default = BouncyCheckbox;\n//# sourceMappingURL=BouncyCheckbox.js.map"]},"metadata":{},"sourceType":"script"}