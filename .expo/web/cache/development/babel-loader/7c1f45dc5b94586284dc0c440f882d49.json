{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Divider } from \"react-native-elements\";\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nvar styles = StyleSheet.create({\n  menuItemStyle: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    margin: 20\n  },\n  titleStyle: {\n    fontSize: 19,\n    fontWeight: \"600\"\n  }\n});\nexport default function MenuItems(_ref) {\n  var restaurantName = _ref.restaurantName,\n      foods = _ref.foods,\n      hideCheckbox = _ref.hideCheckbox,\n      marginLeft = _ref.marginLeft;\n  var dispatch = useDispatch();\n\n  var selectItem = function selectItem(item, checkboxValue) {\n    return dispatch({\n      type: \"ADD_TO_CART\",\n      payload: _objectSpread(_objectSpread({}, item), {}, {\n        restaurantName: restaurantName,\n        checkboxValue: checkboxValue\n      })\n    });\n  };\n\n  var cartItems = useSelector(function (state) {\n    return state.cartReducer.selectedItems.items;\n  });\n\n  var isFoodInCart = function isFoodInCart(food, cartItems) {\n    return Boolean(cartItems.find(function (item) {\n      return item.title === food.title;\n    }));\n  };\n\n  return React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false\n  }, foods.map(function (food, index) {\n    return React.createElement(View, {\n      key: index\n    }, React.createElement(View, {\n      style: styles.menuItemStyle\n    }, hideCheckbox ? React.createElement(React.Fragment, null) : React.createElement(BouncyCheckbox, {\n      iconStyle: {\n        borderColor: \"lightgray\",\n        borderRadius: 0\n      },\n      fillColor: \"green\",\n      isChecked: isFoodInCart(food, cartItems),\n      onPress: function onPress(checkboxValue) {\n        return selectItem(food, checkboxValue);\n      }\n    }), React.createElement(FoodInfo, {\n      food: food\n    }), React.createElement(FoodImage, {\n      food: food,\n      marginLeft: marginLeft ? marginLeft : 0\n    })), React.createElement(Divider, {\n      width: 0.5,\n      orientation: \"vertical\",\n      style: {\n        marginHorizontal: 20\n      }\n    }));\n  }));\n}\n\nvar FoodInfo = function FoodInfo(props) {\n  return React.createElement(View, {\n    style: {\n      width: 240,\n      justifyContent: \"space-evenly\"\n    }\n  }, React.createElement(Text, {\n    style: styles.titleStyle\n  }, props.food.title), React.createElement(Text, null, props.food.description), React.createElement(Text, null, props.food.price));\n};\n\nvar FoodImage = function FoodImage(_ref2) {\n  var marginLeft = _ref2.marginLeft,\n      props = _objectWithoutProperties(_ref2, [\"marginLeft\"]);\n\n  return React.createElement(View, null, React.createElement(Image, {\n    source: {\n      uri: props.food.image\n    },\n    style: {\n      width: 100,\n      height: 100,\n      borderRadius: 8,\n      marginLeft: marginLeft\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/alejandro.maranes/Desktop/uber-eats-clone-app-2021/uber-eats-clone-app-2021/components/restaurantDetail/MenuItems.js"],"names":["React","Divider","BouncyCheckbox","useDispatch","useSelector","styles","StyleSheet","create","menuItemStyle","flexDirection","justifyContent","margin","titleStyle","fontSize","fontWeight","MenuItems","restaurantName","foods","hideCheckbox","marginLeft","dispatch","selectItem","item","checkboxValue","type","payload","cartItems","state","cartReducer","selectedItems","items","isFoodInCart","food","Boolean","find","title","map","index","borderColor","borderRadius","marginHorizontal","FoodInfo","props","width","description","price","FoodImage","uri","image","height"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { View, Text, StyleSheet, Image, ScrollView } from \"react-native\";\r\nimport { Divider } from \"react-native-elements\";\r\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst styles = StyleSheet.create({\r\n  menuItemStyle: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    margin: 20,\r\n  },\r\n\r\n  titleStyle: {\r\n    fontSize: 19,\r\n    fontWeight: \"600\",\r\n  },\r\n});\r\n\r\nexport default function MenuItems({\r\n  restaurantName,\r\n  foods,\r\n  hideCheckbox,\r\n  marginLeft,\r\n}) {\r\n  const dispatch = useDispatch();\r\n\r\n  const selectItem = (item, checkboxValue) =>\r\n    dispatch({\r\n      type: \"ADD_TO_CART\",\r\n      payload: {\r\n        ...item,\r\n        restaurantName: restaurantName,\r\n        checkboxValue: checkboxValue,\r\n      },\r\n    });\r\n\r\n  const cartItems = useSelector(\r\n    (state) => state.cartReducer.selectedItems.items\r\n  );\r\n\r\n  const isFoodInCart = (food, cartItems) =>\r\n    Boolean(cartItems.find((item) => item.title === food.title));\r\n\r\n  return (\r\n    <ScrollView showsVerticalScrollIndicator={false}>\r\n      {foods.map((food, index) => (\r\n        <View key={index}>\r\n          <View style={styles.menuItemStyle}>\r\n            {hideCheckbox ? (\r\n              <></>\r\n            ) : (\r\n              <BouncyCheckbox\r\n                iconStyle={{ borderColor: \"lightgray\", borderRadius: 0 }}\r\n                fillColor=\"green\"\r\n                isChecked={isFoodInCart(food, cartItems)}\r\n                onPress={(checkboxValue) => selectItem(food, checkboxValue)}\r\n              />\r\n            )}\r\n            <FoodInfo food={food} />\r\n            <FoodImage food={food} marginLeft={marginLeft ? marginLeft : 0} />\r\n          </View>\r\n          <Divider\r\n            width={0.5}\r\n            orientation=\"vertical\"\r\n            style={{ marginHorizontal: 20 }}\r\n          />\r\n        </View>\r\n      ))}\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst FoodInfo = (props) => (\r\n  <View style={{ width: 240, justifyContent: \"space-evenly\" }}>\r\n    <Text style={styles.titleStyle}>{props.food.title}</Text>\r\n    <Text>{props.food.description}</Text>\r\n    <Text>{props.food.price}</Text>\r\n  </View>\r\n);\r\n\r\nconst FoodImage = ({ marginLeft, ...props }) => (\r\n  <View>\r\n    <Image\r\n      source={{ uri: props.food.image }}\r\n      style={{\r\n        width: 100,\r\n        height: 100,\r\n        borderRadius: 8,\r\n        marginLeft: marginLeft,\r\n      }}\r\n    />\r\n  </View>\r\n);"]},"metadata":{},"sourceType":"module"}