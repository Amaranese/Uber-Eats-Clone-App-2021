{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useSelector } from \"react-redux\";\nimport LottieView from \"lottie-react-native\";\nimport firebase from \"../firebase\";\nimport MenuItems from \"../components/restaurantDetail/MenuItems\";\nexport default function OrderCompleted() {\n  var _useState = useState({\n    items: [{\n      title: \"Bologna\",\n      description: \"With butter lettuce, tomato and sauce bechamel\",\n      price: \"$13.50\",\n      image: \"https://www.modernhoney.com/wp-content/uploads/2019/08/Classic-Lasagna-14-scaled.jpg\"\n    }]\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      lastOrder = _useState2[0],\n      setLastOrder = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.cartReducer.selectedItems;\n  }),\n      items = _useSelector.items,\n      restaurantName = _useSelector.restaurantName;\n\n  var total = items.map(function (item) {\n    return Number(item.price.replace(\"$\", \"\"));\n  }).reduce(function (prev, curr) {\n    return prev + curr;\n  }, 0);\n  var totalUSD = total.toLocaleString(\"en\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n  useEffect(function () {\n    var db = firebase.firestore();\n    var unsubscribe = db.collection(\"orders\").orderBy(\"createdAt\", \"desc\").limit(1).onSnapshot(function (snapshot) {\n      snapshot.docs.map(function (doc) {\n        setLastOrder(doc.data());\n      });\n    });\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: \"white\"\n    }\n  }, React.createElement(View, {\n    style: {\n      margin: 15,\n      alignItems: \"center\",\n      height: \"100%\"\n    }\n  }, React.createElement(LottieView, {\n    style: {\n      height: 100,\n      alignSelf: \"center\",\n      marginBottom: 30\n    },\n    source: require(\"../assets/animations/check-mark.json\"),\n    autoPlay: true,\n    speed: 0.5,\n    loop: false\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      fontWeight: \"bold\"\n    }\n  }, \"Your order at \", restaurantName, \" has been placed for \", totalUSD), React.createElement(ScrollView, null, React.createElement(MenuItems, {\n    foods: lastOrder.items,\n    hideCheckbox: true,\n    marginLeft: 10\n  }), React.createElement(LottieView, {\n    style: {\n      height: 200,\n      alignSelf: \"center\"\n    },\n    source: require(\"../assets/animations/cooking.json\"),\n    autoPlay: true,\n    speed: 0.5\n  }))));\n}","map":{"version":3,"sources":["C:/Users/alejandro.maranes/Desktop/uber-eats-clone-app-2021/uber-eats-clone-app-2021/screens/OrderCompleted.js"],"names":["React","useEffect","useState","useSelector","LottieView","firebase","MenuItems","OrderCompleted","items","title","description","price","image","lastOrder","setLastOrder","state","cartReducer","selectedItems","restaurantName","total","map","item","Number","replace","reduce","prev","curr","totalUSD","toLocaleString","style","currency","db","firestore","unsubscribe","collection","orderBy","limit","onSnapshot","snapshot","docs","doc","data","flex","backgroundColor","margin","alignItems","height","alignSelf","marginBottom","require","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, SafeAreaView, ScrollView } from \"react-native\";\r\nimport { useSelector } from \"react-redux\";\r\nimport LottieView from \"lottie-react-native\";\r\nimport firebase from \"../firebase\";\r\nimport MenuItems from \"../components/restaurantDetail/MenuItems\";\r\n\r\nexport default function OrderCompleted() {\r\n  const [lastOrder, setLastOrder] = useState({\r\n    items: [\r\n      {\r\n        title: \"Bologna\",\r\n        description: \"With butter lettuce, tomato and sauce bechamel\",\r\n        price: \"$13.50\",\r\n        image:\r\n          \"https://www.modernhoney.com/wp-content/uploads/2019/08/Classic-Lasagna-14-scaled.jpg\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  const { items, restaurantName } = useSelector(\r\n    (state) => state.cartReducer.selectedItems\r\n  );\r\n\r\n  const total = items\r\n    .map((item) => Number(item.price.replace(\"$\", \"\")))\r\n    .reduce((prev, curr) => prev + curr, 0);\r\n\r\n  const totalUSD = total.toLocaleString(\"en\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const db = firebase.firestore();\r\n    const unsubscribe = db\r\n      .collection(\"orders\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .limit(1)\r\n      .onSnapshot((snapshot) => {\r\n        snapshot.docs.map((doc) => {\r\n          setLastOrder(doc.data());\r\n        });\r\n      });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: \"white\" }}>\r\n      {/* green checkmark */}\r\n      <View\r\n        style={{\r\n          margin: 15,\r\n          alignItems: \"center\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        <LottieView\r\n          style={{ height: 100, alignSelf: \"center\", marginBottom: 30 }}\r\n          source={require(\"../assets/animations/check-mark.json\")}\r\n          autoPlay\r\n          speed={0.5}\r\n          loop={false}\r\n        />\r\n        <Text style={{ fontSize: 20, fontWeight: \"bold\" }}>\r\n          Your order at {restaurantName} has been placed for {totalUSD}\r\n        </Text>\r\n        <ScrollView>\r\n          <MenuItems\r\n            foods={lastOrder.items}\r\n            hideCheckbox={true}\r\n            marginLeft={10}\r\n          />\r\n          <LottieView\r\n            style={{ height: 200, alignSelf: \"center\" }}\r\n            source={require(\"../assets/animations/cooking.json\")}\r\n            autoPlay\r\n            speed={0.5}\r\n          />\r\n        </ScrollView>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}